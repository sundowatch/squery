$.fn.hasParent = function(selector, returnParent=false){
    let el = $(this);
    if(el.parents(selector).length > 0){
        if(returnParent)
            return el.parents(selector);
        else
            return true;
    } else{
        return false;
    }
}


$.fn.hasChild = function(selector, returnChild=false){
    if($(this).find(selector).length > 0){
        if(returnChild){
            return $(this).find(selector);
        } else{
            return true;
        }
    } else{
        return false;
    }
}

$.fn.hasAttr = function(attrName){
    let attr = $(this).attr(attrName);
    if(typeof attr !== typeof undefined && attr !== false)
        return true;
    else
        return false;
}

$.fn.data = function(attrName, attrValue=null){
    if(attrValue === null){
        return $(this).attr("data-" + attrName);
    } else{
        $(this).attr("data-" + attrName, attrValue);
        return $(this);
    }
}

$.fn.eqs = function(...args){
    
    if(typeof args[0] === typeof []){
        args = args[0];
    }

    let ret = $(this).eq(args[0]);
    for(let i = 1; i < args.length; i++){
        ret = ret.add($(this).eq(args[i]));
    }

    return ret;
}

$.fn.eqEven = function(){
    let ret = $(this).eq(0);

    for(let i = 2; i < $(this).length; i+=2){
        ret = ret.add($(this).eq(i));
    }

    return ret;
}

$.fn.eqOdd = function(){
    let ret = $(this).eq(1);

    for(let i = 3; i < $(this).length; i+=2){
        ret = ret.add($(this).eq(i));
    }

    return ret;
}

$.fn.near = function(selector){
    return $(this).parent().find(selector);
}


